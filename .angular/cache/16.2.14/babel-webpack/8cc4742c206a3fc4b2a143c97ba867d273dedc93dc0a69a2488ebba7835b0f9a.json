{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.project = new FormGroup({\n      username: new FormControl('', Validators.required)\n      // password: new FormControl('', Validators.required),\n    });\n  }\n\n  ngOnInit() {}\n  onSave() {\n    this.data = this.project.value;\n    // console.log('data',this.data);\n    if (this.data.username == 'More@1623') {\n      this.router.navigate(['/sidebar/dashboard']);\n    } else {\n      alert('Invalid User Name!');\n    }\n    // if (this.data.username === 'anemoi' && this.data.password === 'anemoi') {\n    //   localStorage.setItem('user', this.data.username);\n    //   this.router.navigate(['/document/nav/config/role']);\n    // } else {\n    //   alert('Incorrect Crediantials....!!');\n    //   this.project.reset();\n    //   this.router.navigate(['/']);\n    // }\n    // this.loginService.login(this.project.value).subscribe((data) => {\n    //   console.log(data, 'data');\n    // })\n    // console.log('save');\n    // this.router.navigate(['headers/nav/dashboard'])\n  }\n\n  UserLogin(email) {}\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","LoginComponent","constructor","router","project","username","required","ngOnInit","onSave","data","value","navigate","alert","UserLogin","email","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Narendra\\four_seasons_hotel\\src\\app\\auth\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  project!: FormGroup;\n  data: any;\n  constructor(private router: Router) {\n    this.project = new FormGroup({\n      username: new FormControl('', Validators.required),\n      // password: new FormControl('', Validators.required),\n    });\n  }\n\n  ngOnInit(): void { }\n\n  onSave() {\n    this.data = this.project.value;\n    // console.log('data',this.data);\n    if(this.data.username == 'More@1623'){\n      this.router.navigate(['/sidebar/dashboard'])\n    }else{\n      alert('Invalid User Name!')\n    }\n    \n    // if (this.data.username === 'anemoi' && this.data.password === 'anemoi') {\n    //   localStorage.setItem('user', this.data.username);\n    //   this.router.navigate(['/document/nav/config/role']);\n    // } else {\n    //   alert('Incorrect Crediantials....!!');\n    //   this.project.reset();\n    //   this.router.navigate(['/']);\n    // }\n    // this.loginService.login(this.project.value).subscribe((data) => {\n    //   console.log(data, 'data');\n    // })\n    // console.log('save');\n    \n    // this.router.navigate(['headers/nav/dashboard'])\n\n\n  }\n\n  UserLogin(email: any) {\n\n\n\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAQnE,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAIzBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IACxB,IAAI,CAACC,OAAO,GAAG,IAAIL,SAAS,CAAC;MAC3BM,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ;MACjD;KACD,CAAC;EACJ;;EAEAC,QAAQA,CAAA,GAAW;EAEnBC,MAAMA,CAAA;IACJ,IAAI,CAACC,IAAI,GAAG,IAAI,CAACL,OAAO,CAACM,KAAK;IAC9B;IACA,IAAG,IAAI,CAACD,IAAI,CAACJ,QAAQ,IAAI,WAAW,EAAC;MACnC,IAAI,CAACF,MAAM,CAACQ,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;KAC7C,MAAI;MACHC,KAAK,CAAC,oBAAoB,CAAC;;IAG7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;EAGF;;EAEAC,SAASA,CAACC,KAAU,GAIpB;CACD;AA7CYb,cAAc,GAAAc,UAAA,EAL1BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWjB,cAAc,CA6C1B;SA7CYA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}