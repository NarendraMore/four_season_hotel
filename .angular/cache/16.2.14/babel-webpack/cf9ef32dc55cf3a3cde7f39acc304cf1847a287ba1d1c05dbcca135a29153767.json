{"ast":null,"code":"export class PersonCountComponent {\n  constructor(service) {\n    this.service = service;\n    this.searchText = '';\n    this.page = 1;\n    // data = [\n    //   { hotelId: 1, date: '2023-07-25', time: '12:00', location: 'New York', status: 'In' },\n    //   { hotelId: 2, date: '2023-07-26', time: '14:00', location: 'Los Angeles', status: 'Out' },\n    //   { hotelId: 3, date: '2023-07-27', time: '16:00', location: 'Chicago', status: 'In' },\n    //   { hotelId: 3, date: '2023-07-27', time: '16:00', location: 'Chicago', status: 'Out' },\n    //   { hotelId: 3, date: '2023-07-27', time: '16:00', location: 'Chicago', status: 'Out' },\n    //   { hotelId: 3, date: '2023-07-27', time: '16:00', location: 'Chicago', status: 'In' },\n    //   { hotelId: 3, date: '2023-07-27', time: '16:00', location: 'Chicago', status: 'In' },\n    //   { hotelId: 3, date: '2023-07-27', time: '16:00', location: 'Chicago', status: 'Out' },\n    //   { hotelId: 3, date: '2023-07-27', time: '16:00', location: 'Chicago', status: 'In' },\n    // ];\n    this.totalItems = 0;\n    this.first = 1;\n    this.currentPage = 1;\n    this.itemsPerPage = 5;\n    this.PersoncountArray = [];\n  }\n  ngOnInit() {\n    this.getPersonAllData();\n    this.getPersonCount();\n    this.getPersonCount2();\n  }\n  getPersonAllData() {\n    this.service.getPersonAllData(this.currentPage, this.itemsPerPage).subscribe(AllData => {\n      console.log('PersonallData', AllData);\n      this.PersoncountArray = AllData.data;\n      this.totalItems = AllData.totalItems;\n      console.log('this.totalItems', this.totalItems);\n      this.proecessData(AllData);\n    });\n  }\n  proecessData(allData) {\n    this.PersoncountArray = allData.data.map(item => {\n      if ('in_count' in item) {\n        return {\n          ...item,\n          status: 'IN'\n        };\n      } else if ('out_count' in item) {\n        return {\n          ...item,\n          status: 'OUT'\n        };\n      } else {\n        return {\n          ...item,\n          status: 'UNKNOWN'\n        };\n      }\n    });\n  }\n  getPersonCount() {\n    this.service.getPersonCount().subscribe(CountData => {\n      this.CountArrayIn = CountData.totalInCount;\n      this.currentDate = CountData.date;\n    });\n  }\n  getPersonCount2() {\n    this.service.getPersonCount().subscribe(CountData => {\n      this.CountArrayOut = CountData.totalOutCount;\n      this.currentDate = CountData.date;\n    });\n  }\n  filteredData() {\n    if (!this.searchText) {\n      return this.PersoncountArray;\n    }\n    return this.PersoncountArray.filter(item => Object.values(item).some(val => val.toString().toLowerCase().includes(this.searchText.toLowerCase())));\n  }\n}","map":{"version":3,"names":["PersonCountComponent","constructor","service","searchText","page","totalItems","first","currentPage","itemsPerPage","PersoncountArray","ngOnInit","getPersonAllData","getPersonCount","getPersonCount2","subscribe","AllData","console","log","data","proecessData","allData","map","item","status","CountData","CountArrayIn","totalInCount","currentDate","date","CountArrayOut","totalOutCount","filteredData","filter","Object","values","some","val","toString","toLowerCase","includes"],"sources":["D:\\Narendra\\four_seasons_hotel\\src\\app\\components\\person-count\\person-count.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ServiceService } from 'src/app/service/service.service';\n\n@Component({\n  selector: 'app-person-count',\n  templateUrl: './person-count.component.html',\n  styleUrls: ['./person-count.component.css']\n})\n\nexport interface personCount {\n  H_ID: String;\n  Location: String;\n  cameraname: String;\n  date: String;\n  in_count: String;\n  time: String;\n  out_count: string;\n  timestamp:string;\n}\nexport class PersonCountComponent {\n  searchText: string = '';\n  page: number = 1;\n  CountArrayIn: any;\n  CountArrayOut: any;\n  currentDate: any\n  // data = [\n  //   { hotelId: 1, date: '2023-07-25', time: '12:00', location: 'New York', status: 'In' },\n  //   { hotelId: 2, date: '2023-07-26', time: '14:00', location: 'Los Angeles', status: 'Out' },\n  //   { hotelId: 3, date: '2023-07-27', time: '16:00', location: 'Chicago', status: 'In' },\n  //   { hotelId: 3, date: '2023-07-27', time: '16:00', location: 'Chicago', status: 'Out' },\n  //   { hotelId: 3, date: '2023-07-27', time: '16:00', location: 'Chicago', status: 'Out' },\n  //   { hotelId: 3, date: '2023-07-27', time: '16:00', location: 'Chicago', status: 'In' },\n  //   { hotelId: 3, date: '2023-07-27', time: '16:00', location: 'Chicago', status: 'In' },\n  //   { hotelId: 3, date: '2023-07-27', time: '16:00', location: 'Chicago', status: 'Out' },\n  //   { hotelId: 3, date: '2023-07-27', time: '16:00', location: 'Chicago', status: 'In' },\n\n  // ];\n  totalItems: number = 0;\n  first: any = 1;\n  currentPage: any = 1;\n  itemsPerPage: any = 5;\n  PersoncountArray: personCount[] = [];\n  constructor(private service :ServiceService) { }\n  ngOnInit() {\n    this.getPersonAllData();\n    this.getPersonCount();\n    this.getPersonCount2();\n\n\n    \n  }\n\n  getPersonAllData(): void {\n    this.service.getPersonAllData(this.currentPage, this.itemsPerPage).subscribe((AllData: any) => {\n      console.log('PersonallData', AllData);\n      this.PersoncountArray = AllData.data;\n      this.totalItems = AllData.totalItems\n      console.log('this.totalItems', this.totalItems);\n\n      this.proecessData(AllData);\n    })\n  }\n  proecessData(allData: any): void {\n    this.PersoncountArray = allData.data.map((item: any) => {\n      if ('in_count' in item) {\n        return { ...item, status: 'IN' };\n      } else if ('out_count' in item) {\n        return { ...item, status: 'OUT' };\n      }\n      else { return { ...item, status: 'UNKNOWN' }; }\n    });\n  }\n  getPersonCount() {\n    this.service.getPersonCount().subscribe((CountData: any) => {\n      this.CountArrayIn = CountData.totalInCount\n      this.currentDate = CountData.date\n\n    })\n  }\n  getPersonCount2() {\n    this.service.getPersonCount().subscribe((CountData: any) => {\n      this.CountArrayOut = CountData.totalOutCount\n      this.currentDate = CountData.date\n\n    })\n  }\n  filteredData() {\n    if (!this.searchText) {\n      return this.PersoncountArray;\n    }\n    return this.PersoncountArray.filter(item =>\n      Object.values(item).some(val =>\n        val.toString().toLowerCase().includes(this.searchText.toLowerCase())\n      )\n    );\n  }\n}\n"],"mappings":"AAmBA,OAAM,MAAOA,oBAAoB;EAuB/BC,YAAoBC,OAAuB;IAAvB,KAAAA,OAAO,GAAPA,OAAO;IAtB3B,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,IAAI,GAAW,CAAC;IAIhB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA,KAAAC,UAAU,GAAW,CAAC;IACtB,KAAAC,KAAK,GAAQ,CAAC;IACd,KAAAC,WAAW,GAAQ,CAAC;IACpB,KAAAC,YAAY,GAAQ,CAAC;IACrB,KAAAC,gBAAgB,GAAkB,EAAE;EACW;EAC/CC,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,EAAE;IACvB,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,eAAe,EAAE;EAIxB;EAEAF,gBAAgBA,CAAA;IACd,IAAI,CAACT,OAAO,CAACS,gBAAgB,CAAC,IAAI,CAACJ,WAAW,EAAE,IAAI,CAACC,YAAY,CAAC,CAACM,SAAS,CAAEC,OAAY,IAAI;MAC5FC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,OAAO,CAAC;MACrC,IAAI,CAACN,gBAAgB,GAAGM,OAAO,CAACG,IAAI;MACpC,IAAI,CAACb,UAAU,GAAGU,OAAO,CAACV,UAAU;MACpCW,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACZ,UAAU,CAAC;MAE/C,IAAI,CAACc,YAAY,CAACJ,OAAO,CAAC;IAC5B,CAAC,CAAC;EACJ;EACAI,YAAYA,CAACC,OAAY;IACvB,IAAI,CAACX,gBAAgB,GAAGW,OAAO,CAACF,IAAI,CAACG,GAAG,CAAEC,IAAS,IAAI;MACrD,IAAI,UAAU,IAAIA,IAAI,EAAE;QACtB,OAAO;UAAE,GAAGA,IAAI;UAAEC,MAAM,EAAE;QAAI,CAAE;OACjC,MAAM,IAAI,WAAW,IAAID,IAAI,EAAE;QAC9B,OAAO;UAAE,GAAGA,IAAI;UAAEC,MAAM,EAAE;QAAK,CAAE;OAClC,MACI;QAAE,OAAO;UAAE,GAAGD,IAAI;UAAEC,MAAM,EAAE;QAAS,CAAE;;IAC9C,CAAC,CAAC;EACJ;EACAX,cAAcA,CAAA;IACZ,IAAI,CAACV,OAAO,CAACU,cAAc,EAAE,CAACE,SAAS,CAAEU,SAAc,IAAI;MACzD,IAAI,CAACC,YAAY,GAAGD,SAAS,CAACE,YAAY;MAC1C,IAAI,CAACC,WAAW,GAAGH,SAAS,CAACI,IAAI;IAEnC,CAAC,CAAC;EACJ;EACAf,eAAeA,CAAA;IACb,IAAI,CAACX,OAAO,CAACU,cAAc,EAAE,CAACE,SAAS,CAAEU,SAAc,IAAI;MACzD,IAAI,CAACK,aAAa,GAAGL,SAAS,CAACM,aAAa;MAC5C,IAAI,CAACH,WAAW,GAAGH,SAAS,CAACI,IAAI;IAEnC,CAAC,CAAC;EACJ;EACAG,YAAYA,CAAA;IACV,IAAI,CAAC,IAAI,CAAC5B,UAAU,EAAE;MACpB,OAAO,IAAI,CAACM,gBAAgB;;IAE9B,OAAO,IAAI,CAACA,gBAAgB,CAACuB,MAAM,CAACV,IAAI,IACtCW,MAAM,CAACC,MAAM,CAACZ,IAAI,CAAC,CAACa,IAAI,CAACC,GAAG,IAC1BA,GAAG,CAACC,QAAQ,EAAE,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACpC,UAAU,CAACmC,WAAW,EAAE,CAAC,CACrE,CACF;EACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}