{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ViewChild, Output, Input, NgModule } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"zoomContainer\"];\nconst _c1 = [\"imageThumbnail\"];\nconst _c2 = [\"fullSizeImage\"];\nconst _c3 = function (a1) {\n  return {\n    ngxImageZoomFullContainer: true,\n    ngxImageZoomLensEnabled: a1\n  };\n};\nclass NgxImageZoomService {\n  constructor(changeDetectorRef) {\n    this.changeDetectorRef = changeDetectorRef;\n    this.zoomDisplay = 'none';\n    this.thumbWidth = 0;\n    this.thumbHeight = 0;\n    this.fullImageTop = 0;\n    this.fullImageLeft = 0;\n    this.lensWidth = 100;\n    this.lensHeight = 100;\n    this.lensTop = 0;\n    this.lensLeft = 0;\n    this.magnifiedWidth = 0;\n    this.magnifiedHeight = 0;\n    this.zoomPosition = new BehaviorSubject(null);\n    this.zoomingEnabled = false;\n    this.isReady = false;\n    this.enableLens = false;\n    this.minZoomRatio = 1;\n    this.maxZoomRatio = 2;\n    this.magnification = 1;\n    this.fullWidth = 0;\n    this.fullHeight = 0;\n    this.xRatio = 0;\n    this.yRatio = 0;\n    this.latestMouseLeft = -1;\n    this.latestMouseTop = -1;\n  }\n  zoomOn(event) {\n    if (this.isReady) {\n      this.zoomingEnabled = true;\n      this.calculateRatioAndOffset();\n      this.zoomDisplay = 'block';\n      this.calculateZoomPosition(event);\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n  zoomOff() {\n    this.zoomingEnabled = false;\n    this.zoomDisplay = 'none';\n    this.changeDetectorRef.markForCheck();\n  }\n  markForCheck() {\n    this.changeDetectorRef.markForCheck();\n  }\n  calculateRatioAndOffset() {\n    // If lens is disabled, set lens size to equal thumb size and position it on top of the thumb\n    if (!this.enableLens) {\n      this.lensWidth = this.thumbWidth;\n      this.lensHeight = this.thumbHeight;\n      this.lensLeft = 0;\n      this.lensTop = 0;\n    }\n    if (this.fullImageLoaded) {\n      this.baseRatio = Math.max(this.thumbWidth / this.fullWidth, this.thumbHeight / this.fullHeight);\n      // Don't allow zooming to smaller than thumbnail size\n      this.minZoomRatio = Math.max(this.minZoomRatio || 0, this.baseRatio || 0);\n      this.calculateRatio();\n    }\n  }\n  calculateRatio() {\n    this.magnifiedWidth = this.fullWidth * this.magnification;\n    this.magnifiedHeight = this.fullHeight * this.magnification;\n    this.xRatio = (this.magnifiedWidth - this.thumbWidth) / this.thumbWidth;\n    this.yRatio = (this.magnifiedHeight - this.thumbHeight) / this.thumbHeight;\n  }\n  calculateZoomPosition(event) {\n    const newLeft = Math.max(Math.min(event.offsetX, this.thumbWidth), 0);\n    const newTop = Math.max(Math.min(event.offsetY, this.thumbHeight), 0);\n    this.setZoomPosition(newLeft, newTop);\n    this.calculateImageAndLensPosition();\n    this.changeDetectorRef.markForCheck();\n  }\n  calculateImageAndLensPosition() {\n    let lensLeftMod = 0;\n    let lensTopMod = 0;\n    if (this.enableLens && this.latestMouseLeft > 0) {\n      lensLeftMod = this.latestMouseLeft - this.lensWidth / 2;\n      lensTopMod = this.latestMouseTop - this.lensHeight / 2;\n      this.lensLeft = lensLeftMod;\n      this.lensTop = lensTopMod;\n    }\n    this.fullImageLeft = this.latestMouseLeft * -this.xRatio - lensLeftMod;\n    this.fullImageTop = this.latestMouseTop * -this.yRatio - lensTopMod;\n  }\n  setZoomPosition(left, top) {\n    this.latestMouseLeft = Number(left) || this.latestMouseLeft;\n    this.latestMouseTop = Number(top) || this.latestMouseTop;\n    const newPosition = {\n      x: this.latestMouseLeft,\n      y: this.latestMouseTop\n    };\n    this.zoomPosition.next(newPosition);\n  }\n}\nNgxImageZoomService.ɵfac = function NgxImageZoomService_Factory(t) {\n  return new (t || NgxImageZoomService)(i0.ɵɵinject(i0.ChangeDetectorRef));\n};\nNgxImageZoomService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgxImageZoomService,\n  factory: NgxImageZoomService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxImageZoomService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\nclass ClickZoomMode {\n  constructor(zoomService) {\n    this.zoomService = zoomService;\n  }\n  onClick(event) {\n    if (this.zoomService.zoomingEnabled === false) {\n      this.zoomService.zoomOn(event);\n    }\n  }\n  onMouseEnter() {\n    // NOP\n  }\n  onMouseLeave() {\n    this.zoomService.zoomOff();\n  }\n  onMouseMove(event) {\n    if (this.zoomService.zoomingEnabled) {\n      this.zoomService.calculateZoomPosition(event);\n    }\n  }\n  onMouseWheel() {\n    return true;\n  }\n}\nclass HoverFreezeZoomMode {\n  constructor(zoomService) {\n    this.zoomService = zoomService;\n    this.zoomFrozen = false;\n  }\n  onClick(event) {\n    if (this.zoomService.zoomingEnabled && this.zoomFrozen) {\n      this.zoomFrozen = false;\n    } else if (this.zoomService.zoomingEnabled) {\n      this.zoomFrozen = true;\n      this.zoomService.markForCheck();\n    } else {\n      this.zoomService.zoomOn(event);\n    }\n  }\n  onMouseEnter(event) {\n    if (!this.zoomFrozen) {\n      this.zoomService.zoomOn(event);\n    }\n  }\n  onMouseLeave() {\n    if (this.zoomService.zoomingEnabled && !this.zoomFrozen) {\n      this.zoomService.zoomOff();\n    }\n  }\n  onMouseMove(event) {\n    if (this.zoomService.zoomingEnabled && !this.zoomFrozen) {\n      this.zoomService.calculateZoomPosition(event);\n    }\n  }\n  onMouseWheel() {\n    // Prevent scroll zoom if we're frozen\n    return !this.zoomFrozen;\n  }\n}\nclass HoverZoomMode {\n  constructor(zoomService) {\n    this.zoomService = zoomService;\n  }\n  onClick() {\n    // NOP\n  }\n  onMouseEnter(event) {\n    this.zoomService.zoomOn(event);\n  }\n  onMouseLeave() {\n    this.zoomService.zoomOff();\n  }\n  onMouseMove(event) {\n    this.zoomService.calculateZoomPosition(event);\n  }\n  onMouseWheel() {\n    return true;\n  }\n}\nclass ToggleClickZoomMode {\n  constructor(zoomService) {\n    this.zoomService = zoomService;\n  }\n  onClick(event) {\n    if (this.zoomService.zoomingEnabled) {\n      this.zoomService.zoomOff();\n    } else {\n      this.zoomService.zoomOn(event);\n    }\n  }\n  onMouseEnter() {\n    // NOP\n  }\n  onMouseLeave() {\n    this.zoomService.zoomOff();\n  }\n  onMouseMove(event) {\n    if (this.zoomService.zoomingEnabled) {\n      this.zoomService.calculateZoomPosition(event);\n    }\n  }\n  onMouseWheel() {\n    return true;\n  }\n}\nclass ToggleFreezeZoomMode {\n  constructor(zoomService) {\n    this.zoomService = zoomService;\n    this.zoomFrozen = false;\n  }\n  onClick(event) {\n    if (this.zoomService.zoomingEnabled && this.zoomFrozen) {\n      this.zoomFrozen = false;\n      this.zoomService.zoomOff();\n    } else if (this.zoomService.zoomingEnabled) {\n      this.zoomFrozen = true;\n      this.zoomService.markForCheck();\n    } else {\n      this.zoomService.zoomOn(event);\n    }\n  }\n  onMouseEnter() {\n    // NOP\n  }\n  onMouseLeave() {\n    if (this.zoomService.zoomingEnabled && !this.zoomFrozen) {\n      this.zoomService.zoomOff();\n    }\n  }\n  onMouseMove(event) {\n    if (this.zoomService.zoomingEnabled && !this.zoomFrozen) {\n      this.zoomService.calculateZoomPosition(event);\n    }\n  }\n  onMouseWheel() {\n    // Prevent scroll zoom if we're frozen\n    return !this.zoomFrozen;\n  }\n}\nclass ToggleZoomMode {\n  constructor(zoomService) {\n    this.zoomService = zoomService;\n  }\n  onClick(event) {\n    if (this.zoomService.zoomingEnabled) {\n      this.zoomService.zoomOff();\n    } else {\n      this.zoomService.zoomOn(event);\n    }\n  }\n  onMouseEnter() {\n    // NOP\n  }\n  onMouseLeave() {\n    // NOP\n  }\n  onMouseMove() {\n    // NOP\n  }\n  onMouseWheel() {\n    return true;\n  }\n}\nclass NgxImageZoomComponent {\n  constructor(zoomService, renderer) {\n    this.zoomService = zoomService;\n    this.renderer = renderer;\n    this.zoomScroll = new EventEmitter();\n    this.zoomPosition = new EventEmitter();\n    this.imagesLoaded = new EventEmitter();\n    this.lensBorderRadius = 0;\n    this.zoomMode = 'hover';\n    this.enableScrollZoom = false;\n    this.scrollStepSize = 0.1;\n    this.circularLens = false;\n    this.thumbImageLoaded = false;\n    this.subscriptions = [];\n    this.eventListeners = [];\n    this.zoomModesMap = new Map([['click', ClickZoomMode], ['hover-freeze', HoverFreezeZoomMode], ['hover', HoverZoomMode], ['toggle-click', ToggleClickZoomMode], ['toggle-freeze', ToggleFreezeZoomMode], ['toggle', ToggleZoomMode]]);\n    this.altText = '';\n    this.titleText = '';\n  }\n  set setThumbImage(thumbImage) {\n    this.thumbImageLoaded = false;\n    this.setIsReady(false);\n    this.thumbImage = thumbImage;\n  }\n  set setFullImage(fullImage) {\n    this.zoomService.fullImageLoaded = false;\n    this.setIsReady(false);\n    this.fullImage = fullImage;\n  }\n  set setZoomMode(zoomMode) {\n    if (NgxImageZoomComponent.validZoomModes.some(m => m === zoomMode)) {\n      this.zoomMode = zoomMode;\n    }\n  }\n  set setMagnification(magnification) {\n    this.zoomService.magnification = Number(magnification) || this.zoomService.magnification;\n    this.zoomScroll.emit(this.zoomService.magnification);\n  }\n  set setMinZoomRatio(minZoomRatio) {\n    const ratio = Number(minZoomRatio) || this.zoomService.minZoomRatio || this.zoomService.baseRatio || 0;\n    this.zoomService.minZoomRatio = Math.max(ratio, this.zoomService.baseRatio || 0);\n  }\n  set setMaxZoomRatio(maxZoomRatio) {\n    this.zoomService.maxZoomRatio = Number(maxZoomRatio) || this.zoomService.maxZoomRatio;\n  }\n  set setScrollStepSize(stepSize) {\n    this.scrollStepSize = Number(stepSize) || this.scrollStepSize;\n  }\n  set setEnableLens(enable) {\n    this.zoomService.enableLens = Boolean(enable);\n  }\n  set setLensWidth(width) {\n    this.zoomService.lensWidth = Number(width) || this.zoomService.lensWidth;\n  }\n  set setLensHeight(height) {\n    this.zoomService.lensHeight = Number(height) || this.zoomService.lensHeight;\n  }\n  set setCircularLens(enable) {\n    this.circularLens = Boolean(enable);\n  }\n  set setEnableScrollZoom(enable) {\n    this.enableScrollZoom = Boolean(enable);\n  }\n  ngOnInit() {\n    // If no full size image is defined, we add the thumbnail as the full size too.\n    if (this.fullImage === undefined) {\n      this.fullImage = this.thumbImage;\n    }\n    this.registerServiceSubscriptions();\n    // Load zoom mode and set up configuration.\n    this.loadZoomMode();\n    this.registerEventListeners();\n    this.calculateLensBorder();\n  }\n  ngOnChanges() {\n    this.calculateLensBorder();\n    this.zoomService.calculateRatioAndOffset();\n    this.zoomService.calculateImageAndLensPosition();\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    this.eventListeners.forEach(destroyFn => destroyFn());\n  }\n  registerServiceSubscriptions() {\n    this.subscriptions.push(this.zoomService.zoomPosition.subscribe(position => this.zoomPosition.emit(position)));\n  }\n  loadZoomMode() {\n    const ZoomModeClass = this.zoomModesMap.get(this.zoomMode);\n    if (ZoomModeClass) {\n      this.zoomInstance = new ZoomModeClass(this.zoomService);\n    } else {\n      console.error(`Unsupported zoom mode: ${this.zoomMode}`);\n    }\n  }\n  registerEventListeners() {\n    if (this.zoomInstance) {\n      const nativeElement = this.zoomContainer.nativeElement;\n      this.eventListeners.push(this.renderer.listen(nativeElement, 'mouseenter', event => this.zoomInstance.onMouseEnter(event)), this.renderer.listen(nativeElement, 'mouseleave', event => this.zoomInstance.onMouseLeave(event)), this.renderer.listen(nativeElement, 'mousemove', event => this.zoomInstance.onMouseMove(event)), this.renderer.listen(nativeElement, 'click', event => this.zoomInstance.onClick(event)),\n      // Chrome: 'mousewheel', Firefox: 'DOMMouseScroll', IE: 'onmousewheel'\n      this.renderer.listen(nativeElement, 'mousewheel', event => {\n        if (this.zoomInstance.onMouseWheel(event)) {\n          this.onMouseWheel(event);\n        }\n      }), this.renderer.listen(nativeElement, 'DOMMouseScroll', event => {\n        if (this.zoomInstance.onMouseWheel(event)) {\n          this.onMouseWheel(event);\n        }\n      }), this.renderer.listen(nativeElement, 'onmousewheel', event => {\n        if (this.zoomInstance.onMouseWheel(event)) {\n          this.onMouseWheel(event);\n        }\n      }));\n    }\n  }\n  /**\r\n   * Template helper methods\r\n   */\n  onThumbImageLoaded() {\n    // Pass along image sizes to the service.\n    this.zoomService.thumbWidth = this.imageThumbnail.nativeElement.width;\n    this.zoomService.thumbHeight = this.imageThumbnail.nativeElement.height;\n    this.thumbImageLoaded = true;\n    this.checkImagesLoaded();\n  }\n  onFullImageLoaded() {\n    // Pass along image sizes to the service.\n    this.zoomService.fullWidth = this.fullSizeImage.nativeElement.naturalWidth;\n    this.zoomService.fullHeight = this.fullSizeImage.nativeElement.naturalHeight;\n    this.zoomService.fullImageLoaded = true;\n    this.checkImagesLoaded();\n  }\n  calculateLensBorder() {\n    if (this.zoomService.enableLens) {\n      if (this.circularLens) {\n        this.lensBorderRadius = this.zoomService.lensWidth / 2;\n      } else {\n        this.lensBorderRadius = 0;\n      }\n    }\n  }\n  checkImagesLoaded() {\n    this.zoomService.calculateRatioAndOffset();\n    if (this.thumbImageLoaded && this.zoomService.fullImageLoaded) {\n      this.zoomService.calculateImageAndLensPosition();\n      this.setIsReady(true);\n    }\n  }\n  setIsReady(value) {\n    this.zoomService.isReady = value;\n    this.imagesLoaded.emit(value);\n  }\n  /**\r\n   * Mouse wheel event\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onMouseWheel(event) {\n    // Don't eat events if scrollZoom or zooming isn't active\n    if (!this.enableScrollZoom || !this.zoomService.zoomingEnabled) {\n      return;\n    }\n    event = window.event || event; // old IE\n    const direction = Math.max(Math.min(event.wheelDelta || -event.detail, 1), -1);\n    if (direction > 0) {\n      // up\n      this.setMagnification = Math.min(this.zoomService.magnification + this.scrollStepSize, this.zoomService.maxZoomRatio);\n    } else {\n      // down\n      this.setMagnification = Math.max(this.zoomService.magnification - this.scrollStepSize, this.zoomService.minZoomRatio);\n    }\n    this.zoomService.calculateRatio();\n    this.zoomService.calculateZoomPosition(event);\n    // Prevent scrolling on page.\n    event.returnValue = false; // IE\n    if (event.preventDefault) {\n      event.preventDefault(); // Chrome & FF\n    }\n  }\n}\n\nNgxImageZoomComponent.validZoomModes = ['hover', 'toggle', 'click', 'toggle-click', 'toggle-freeze', 'hover-freeze'];\nNgxImageZoomComponent.ɵfac = function NgxImageZoomComponent_Factory(t) {\n  return new (t || NgxImageZoomComponent)(i0.ɵɵdirectiveInject(NgxImageZoomService), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nNgxImageZoomComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxImageZoomComponent,\n  selectors: [[\"lib-ngx-image-zoom\"]],\n  viewQuery: function NgxImageZoomComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n      i0.ɵɵviewQuery(_c1, 7);\n      i0.ɵɵviewQuery(_c2, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.zoomContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.imageThumbnail = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fullSizeImage = _t.first);\n    }\n  },\n  inputs: {\n    setThumbImage: [\"thumbImage\", \"setThumbImage\"],\n    setFullImage: [\"fullImage\", \"setFullImage\"],\n    setZoomMode: [\"zoomMode\", \"setZoomMode\"],\n    setMagnification: [\"magnification\", \"setMagnification\"],\n    setMinZoomRatio: [\"minZoomRatio\", \"setMinZoomRatio\"],\n    setMaxZoomRatio: [\"maxZoomRatio\", \"setMaxZoomRatio\"],\n    setScrollStepSize: [\"scrollStepSize\", \"setScrollStepSize\"],\n    setEnableLens: [\"enableLens\", \"setEnableLens\"],\n    setLensWidth: [\"lensWidth\", \"setLensWidth\"],\n    setLensHeight: [\"lensHeight\", \"setLensHeight\"],\n    setCircularLens: [\"circularLens\", \"setCircularLens\"],\n    setEnableScrollZoom: [\"enableScrollZoom\", \"setEnableScrollZoom\"],\n    altText: \"altText\",\n    titleText: \"titleText\"\n  },\n  outputs: {\n    zoomScroll: \"zoomScroll\",\n    zoomPosition: \"zoomPosition\",\n    imagesLoaded: \"imagesLoaded\"\n  },\n  features: [i0.ɵɵProvidersFeature([NgxImageZoomService]), i0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 35,\n  consts: [[1, \"ngxImageZoomContainer\"], [\"zoomContainer\", \"\"], [1, \"ngxImageZoomThumbnail\", 3, \"alt\", \"title\", \"src\", \"load\"], [\"imageThumbnail\", \"\"], [3, \"ngClass\"], [1, \"ngxImageZoomFull\", 3, \"alt\", \"title\", \"src\", \"load\"], [\"fullSizeImage\", \"\"]],\n  template: function NgxImageZoomComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"img\", 2, 3);\n      i0.ɵɵlistener(\"load\", function NgxImageZoomComponent_Template_img_load_2_listener() {\n        return ctx.onThumbImageLoaded();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"img\", 5, 6);\n      i0.ɵɵlistener(\"load\", function NgxImageZoomComponent_Template_img_load_5_listener() {\n        return ctx.onFullImageLoaded();\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.zoomService.thumbWidth, \"px\")(\"height\", ctx.zoomService.thumbHeight, \"px\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"alt\", ctx.altText)(\"title\", ctx.titleText)(\"src\", ctx.thumbImage, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleProp(\"display\", ctx.zoomService.zoomDisplay)(\"top\", ctx.zoomService.lensTop, \"px\")(\"left\", ctx.zoomService.lensLeft, \"px\")(\"width\", ctx.zoomService.lensWidth, \"px\")(\"height\", ctx.zoomService.lensHeight, \"px\")(\"border-radius\", ctx.lensBorderRadius, \"px\");\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(33, _c3, ctx.zoomService.enableLens));\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"display\", ctx.zoomService.zoomDisplay)(\"top\", ctx.zoomService.fullImageTop, \"px\")(\"left\", ctx.zoomService.fullImageLeft, \"px\")(\"width\", ctx.zoomService.magnifiedWidth, \"px\")(\"height\", ctx.zoomService.magnifiedHeight, \"px\");\n      i0.ɵɵproperty(\"alt\", ctx.altText)(\"title\", ctx.titleText)(\"src\", ctx.fullImage, i0.ɵɵsanitizeUrl);\n    }\n  },\n  dependencies: [i2.NgClass],\n  styles: [\".ngxImageZoomContainer[_ngcontent-%COMP%]{position:relative;margin:auto;overflow:hidden;pointer-events:none}.ngxImageZoomThumbnail[_ngcontent-%COMP%]{pointer-events:all}.ngxImageZoomFull[_ngcontent-%COMP%]{position:absolute;max-width:none;max-height:none;display:none;pointer-events:none}.ngxImageZoomFullContainer[_ngcontent-%COMP%]{position:absolute;overflow:hidden;pointer-events:none}.ngxImageZoomFullContainer.ngxImageZoomLensEnabled[_ngcontent-%COMP%]{border:2px solid red;cursor:crosshair;pointer-events:none}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxImageZoomComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-ngx-image-zoom',\n      providers: [NgxImageZoomService],\n      template: \"<div\\n    #zoomContainer\\n    class=\\\"ngxImageZoomContainer\\\"\\n    [style.width.px]=\\\"this.zoomService.thumbWidth\\\"\\n    [style.height.px]=\\\"this.zoomService.thumbHeight\\\"\\n>\\n    <img\\n        #imageThumbnail\\n        class=\\\"ngxImageZoomThumbnail\\\"\\n        [alt]=\\\"altText\\\"\\n        [title]=\\\"titleText\\\"\\n        [src]=\\\"thumbImage\\\"\\n        (load)=\\\"onThumbImageLoaded()\\\"\\n    />\\n\\n    <div\\n        [ngClass]=\\\"{\\n            ngxImageZoomFullContainer: true,\\n            ngxImageZoomLensEnabled: this.zoomService.enableLens\\n        }\\\"\\n        [style.display]=\\\"this.zoomService.zoomDisplay\\\"\\n        [style.top.px]=\\\"this.zoomService.lensTop\\\"\\n        [style.left.px]=\\\"this.zoomService.lensLeft\\\"\\n        [style.width.px]=\\\"this.zoomService.lensWidth\\\"\\n        [style.height.px]=\\\"this.zoomService.lensHeight\\\"\\n        [style.border-radius.px]=\\\"this.lensBorderRadius\\\"\\n    >\\n        <img\\n            #fullSizeImage\\n            class=\\\"ngxImageZoomFull\\\"\\n            [alt]=\\\"altText\\\"\\n            [title]=\\\"titleText\\\"\\n            [src]=\\\"fullImage\\\"\\n            (load)=\\\"onFullImageLoaded()\\\"\\n            [style.display]=\\\"this.zoomService.zoomDisplay\\\"\\n            [style.top.px]=\\\"this.zoomService.fullImageTop\\\"\\n            [style.left.px]=\\\"this.zoomService.fullImageLeft\\\"\\n            [style.width.px]=\\\"this.zoomService.magnifiedWidth\\\"\\n            [style.height.px]=\\\"this.zoomService.magnifiedHeight\\\"\\n        />\\n    </div>\\n</div>\\n\",\n      styles: [\".ngxImageZoomContainer{position:relative;margin:auto;overflow:hidden;pointer-events:none}.ngxImageZoomThumbnail{pointer-events:all}.ngxImageZoomFull{position:absolute;max-width:none;max-height:none;display:none;pointer-events:none}.ngxImageZoomFullContainer{position:absolute;overflow:hidden;pointer-events:none}.ngxImageZoomFullContainer.ngxImageZoomLensEnabled{border:2px solid red;cursor:crosshair;pointer-events:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgxImageZoomService\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    zoomContainer: [{\n      type: ViewChild,\n      args: ['zoomContainer', {\n        static: true\n      }]\n    }],\n    imageThumbnail: [{\n      type: ViewChild,\n      args: ['imageThumbnail', {\n        static: true\n      }]\n    }],\n    fullSizeImage: [{\n      type: ViewChild,\n      args: ['fullSizeImage', {\n        static: true\n      }]\n    }],\n    zoomScroll: [{\n      type: Output\n    }],\n    zoomPosition: [{\n      type: Output\n    }],\n    imagesLoaded: [{\n      type: Output\n    }],\n    setThumbImage: [{\n      type: Input,\n      args: ['thumbImage']\n    }],\n    setFullImage: [{\n      type: Input,\n      args: ['fullImage']\n    }],\n    setZoomMode: [{\n      type: Input,\n      args: ['zoomMode']\n    }],\n    setMagnification: [{\n      type: Input,\n      args: ['magnification']\n    }],\n    setMinZoomRatio: [{\n      type: Input,\n      args: ['minZoomRatio']\n    }],\n    setMaxZoomRatio: [{\n      type: Input,\n      args: ['maxZoomRatio']\n    }],\n    setScrollStepSize: [{\n      type: Input,\n      args: ['scrollStepSize']\n    }],\n    setEnableLens: [{\n      type: Input,\n      args: ['enableLens']\n    }],\n    setLensWidth: [{\n      type: Input,\n      args: ['lensWidth']\n    }],\n    setLensHeight: [{\n      type: Input,\n      args: ['lensHeight']\n    }],\n    setCircularLens: [{\n      type: Input,\n      args: ['circularLens']\n    }],\n    setEnableScrollZoom: [{\n      type: Input,\n      args: ['enableScrollZoom']\n    }],\n    altText: [{\n      type: Input\n    }],\n    titleText: [{\n      type: Input\n    }]\n  });\n})();\nclass NgxImageZoomModule {}\nNgxImageZoomModule.ɵfac = function NgxImageZoomModule_Factory(t) {\n  return new (t || NgxImageZoomModule)();\n};\nNgxImageZoomModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxImageZoomModule\n});\nNgxImageZoomModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxImageZoomModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxImageZoomComponent],\n      imports: [CommonModule],\n      exports: [NgxImageZoomComponent]\n    }]\n  }], null, null);\n})();\n\n/*\r\n * Public API Surface of ngx-image-zoom\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxImageZoomComponent, NgxImageZoomModule };","map":{"version":3,"names":["i0","Injectable","EventEmitter","Component","ViewChild","Output","Input","NgModule","BehaviorSubject","i2","CommonModule","_c0","_c1","_c2","_c3","a1","ngxImageZoomFullContainer","ngxImageZoomLensEnabled","NgxImageZoomService","constructor","changeDetectorRef","zoomDisplay","thumbWidth","thumbHeight","fullImageTop","fullImageLeft","lensWidth","lensHeight","lensTop","lensLeft","magnifiedWidth","magnifiedHeight","zoomPosition","zoomingEnabled","isReady","enableLens","minZoomRatio","maxZoomRatio","magnification","fullWidth","fullHeight","xRatio","yRatio","latestMouseLeft","latestMouseTop","zoomOn","event","calculateRatioAndOffset","calculateZoomPosition","markForCheck","zoomOff","fullImageLoaded","baseRatio","Math","max","calculateRatio","newLeft","min","offsetX","newTop","offsetY","setZoomPosition","calculateImageAndLensPosition","lensLeftMod","lensTopMod","left","top","Number","newPosition","x","y","next","ɵfac","NgxImageZoomService_Factory","t","ɵɵinject","ChangeDetectorRef","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","ClickZoomMode","zoomService","onClick","onMouseEnter","onMouseLeave","onMouseMove","onMouseWheel","HoverFreezeZoomMode","zoomFrozen","HoverZoomMode","ToggleClickZoomMode","ToggleFreezeZoomMode","ToggleZoomMode","NgxImageZoomComponent","renderer","zoomScroll","imagesLoaded","lensBorderRadius","zoomMode","enableScrollZoom","scrollStepSize","circularLens","thumbImageLoaded","subscriptions","eventListeners","zoomModesMap","Map","altText","titleText","setThumbImage","thumbImage","setIsReady","setFullImage","fullImage","setZoomMode","validZoomModes","some","m","setMagnification","emit","setMinZoomRatio","ratio","setMaxZoomRatio","setScrollStepSize","stepSize","setEnableLens","enable","Boolean","setLensWidth","width","setLensHeight","height","setCircularLens","setEnableScrollZoom","ngOnInit","undefined","registerServiceSubscriptions","loadZoomMode","registerEventListeners","calculateLensBorder","ngOnChanges","ngOnDestroy","forEach","subscription","unsubscribe","destroyFn","push","subscribe","position","ZoomModeClass","get","zoomInstance","console","error","nativeElement","zoomContainer","listen","onThumbImageLoaded","imageThumbnail","checkImagesLoaded","onFullImageLoaded","fullSizeImage","naturalWidth","naturalHeight","value","window","direction","wheelDelta","detail","returnValue","preventDefault","NgxImageZoomComponent_Factory","ɵɵdirectiveInject","Renderer2","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","NgxImageZoomComponent_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","inputs","outputs","features","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","decls","vars","consts","template","NgxImageZoomComponent_Template","ɵɵelementStart","ɵɵlistener","NgxImageZoomComponent_Template_img_load_2_listener","ɵɵelementEnd","NgxImageZoomComponent_Template_img_load_5_listener","ɵɵstyleProp","ɵɵadvance","ɵɵproperty","ɵɵsanitizeUrl","ɵɵpureFunction1","dependencies","NgClass","styles","args","selector","providers","static","NgxImageZoomModule","NgxImageZoomModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["D:/Narendra/four_seasons_hotel/node_modules/ngx-image-zoom/fesm2020/ngx-image-zoom.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ViewChild, Output, Input, NgModule } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass NgxImageZoomService {\r\n    constructor(changeDetectorRef) {\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.zoomDisplay = 'none';\r\n        this.thumbWidth = 0;\r\n        this.thumbHeight = 0;\r\n        this.fullImageTop = 0;\r\n        this.fullImageLeft = 0;\r\n        this.lensWidth = 100;\r\n        this.lensHeight = 100;\r\n        this.lensTop = 0;\r\n        this.lensLeft = 0;\r\n        this.magnifiedWidth = 0;\r\n        this.magnifiedHeight = 0;\r\n        this.zoomPosition = new BehaviorSubject(null);\r\n        this.zoomingEnabled = false;\r\n        this.isReady = false;\r\n        this.enableLens = false;\r\n        this.minZoomRatio = 1;\r\n        this.maxZoomRatio = 2;\r\n        this.magnification = 1;\r\n        this.fullWidth = 0;\r\n        this.fullHeight = 0;\r\n        this.xRatio = 0;\r\n        this.yRatio = 0;\r\n        this.latestMouseLeft = -1;\r\n        this.latestMouseTop = -1;\r\n    }\r\n    zoomOn(event) {\r\n        if (this.isReady) {\r\n            this.zoomingEnabled = true;\r\n            this.calculateRatioAndOffset();\r\n            this.zoomDisplay = 'block';\r\n            this.calculateZoomPosition(event);\r\n            this.changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    zoomOff() {\r\n        this.zoomingEnabled = false;\r\n        this.zoomDisplay = 'none';\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n    markForCheck() {\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n    calculateRatioAndOffset() {\r\n        // If lens is disabled, set lens size to equal thumb size and position it on top of the thumb\r\n        if (!this.enableLens) {\r\n            this.lensWidth = this.thumbWidth;\r\n            this.lensHeight = this.thumbHeight;\r\n            this.lensLeft = 0;\r\n            this.lensTop = 0;\r\n        }\r\n        if (this.fullImageLoaded) {\r\n            this.baseRatio = Math.max(this.thumbWidth / this.fullWidth, this.thumbHeight / this.fullHeight);\r\n            // Don't allow zooming to smaller than thumbnail size\r\n            this.minZoomRatio = Math.max(this.minZoomRatio || 0, this.baseRatio || 0);\r\n            this.calculateRatio();\r\n        }\r\n    }\r\n    calculateRatio() {\r\n        this.magnifiedWidth = this.fullWidth * this.magnification;\r\n        this.magnifiedHeight = this.fullHeight * this.magnification;\r\n        this.xRatio = (this.magnifiedWidth - this.thumbWidth) / this.thumbWidth;\r\n        this.yRatio = (this.magnifiedHeight - this.thumbHeight) / this.thumbHeight;\r\n    }\r\n    calculateZoomPosition(event) {\r\n        const newLeft = Math.max(Math.min(event.offsetX, this.thumbWidth), 0);\r\n        const newTop = Math.max(Math.min(event.offsetY, this.thumbHeight), 0);\r\n        this.setZoomPosition(newLeft, newTop);\r\n        this.calculateImageAndLensPosition();\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n    calculateImageAndLensPosition() {\r\n        let lensLeftMod = 0;\r\n        let lensTopMod = 0;\r\n        if (this.enableLens && this.latestMouseLeft > 0) {\r\n            lensLeftMod = this.latestMouseLeft - this.lensWidth / 2;\r\n            lensTopMod = this.latestMouseTop - this.lensHeight / 2;\r\n            this.lensLeft = lensLeftMod;\r\n            this.lensTop = lensTopMod;\r\n        }\r\n        this.fullImageLeft = this.latestMouseLeft * -this.xRatio - lensLeftMod;\r\n        this.fullImageTop = this.latestMouseTop * -this.yRatio - lensTopMod;\r\n    }\r\n    setZoomPosition(left, top) {\r\n        this.latestMouseLeft = Number(left) || this.latestMouseLeft;\r\n        this.latestMouseTop = Number(top) || this.latestMouseTop;\r\n        const newPosition = {\r\n            x: this.latestMouseLeft,\r\n            y: this.latestMouseTop,\r\n        };\r\n        this.zoomPosition.next(newPosition);\r\n    }\r\n}\r\nNgxImageZoomService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.3\", ngImport: i0, type: NgxImageZoomService, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxImageZoomService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.1.3\", ngImport: i0, type: NgxImageZoomService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.3\", ngImport: i0, type: NgxImageZoomService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; } });\n\nclass ClickZoomMode {\r\n    constructor(zoomService) {\r\n        this.zoomService = zoomService;\r\n    }\r\n    onClick(event) {\r\n        if (this.zoomService.zoomingEnabled === false) {\r\n            this.zoomService.zoomOn(event);\r\n        }\r\n    }\r\n    onMouseEnter() {\r\n        // NOP\r\n    }\r\n    onMouseLeave() {\r\n        this.zoomService.zoomOff();\r\n    }\r\n    onMouseMove(event) {\r\n        if (this.zoomService.zoomingEnabled) {\r\n            this.zoomService.calculateZoomPosition(event);\r\n        }\r\n    }\r\n    onMouseWheel() {\r\n        return true;\r\n    }\r\n}\n\nclass HoverFreezeZoomMode {\r\n    constructor(zoomService) {\r\n        this.zoomService = zoomService;\r\n        this.zoomFrozen = false;\r\n    }\r\n    onClick(event) {\r\n        if (this.zoomService.zoomingEnabled && this.zoomFrozen) {\r\n            this.zoomFrozen = false;\r\n        }\r\n        else if (this.zoomService.zoomingEnabled) {\r\n            this.zoomFrozen = true;\r\n            this.zoomService.markForCheck();\r\n        }\r\n        else {\r\n            this.zoomService.zoomOn(event);\r\n        }\r\n    }\r\n    onMouseEnter(event) {\r\n        if (!this.zoomFrozen) {\r\n            this.zoomService.zoomOn(event);\r\n        }\r\n    }\r\n    onMouseLeave() {\r\n        if (this.zoomService.zoomingEnabled && !this.zoomFrozen) {\r\n            this.zoomService.zoomOff();\r\n        }\r\n    }\r\n    onMouseMove(event) {\r\n        if (this.zoomService.zoomingEnabled && !this.zoomFrozen) {\r\n            this.zoomService.calculateZoomPosition(event);\r\n        }\r\n    }\r\n    onMouseWheel() {\r\n        // Prevent scroll zoom if we're frozen\r\n        return !this.zoomFrozen;\r\n    }\r\n}\n\nclass HoverZoomMode {\r\n    constructor(zoomService) {\r\n        this.zoomService = zoomService;\r\n    }\r\n    onClick() {\r\n        // NOP\r\n    }\r\n    onMouseEnter(event) {\r\n        this.zoomService.zoomOn(event);\r\n    }\r\n    onMouseLeave() {\r\n        this.zoomService.zoomOff();\r\n    }\r\n    onMouseMove(event) {\r\n        this.zoomService.calculateZoomPosition(event);\r\n    }\r\n    onMouseWheel() {\r\n        return true;\r\n    }\r\n}\n\nclass ToggleClickZoomMode {\r\n    constructor(zoomService) {\r\n        this.zoomService = zoomService;\r\n    }\r\n    onClick(event) {\r\n        if (this.zoomService.zoomingEnabled) {\r\n            this.zoomService.zoomOff();\r\n        }\r\n        else {\r\n            this.zoomService.zoomOn(event);\r\n        }\r\n    }\r\n    onMouseEnter() {\r\n        // NOP\r\n    }\r\n    onMouseLeave() {\r\n        this.zoomService.zoomOff();\r\n    }\r\n    onMouseMove(event) {\r\n        if (this.zoomService.zoomingEnabled) {\r\n            this.zoomService.calculateZoomPosition(event);\r\n        }\r\n    }\r\n    onMouseWheel() {\r\n        return true;\r\n    }\r\n}\n\nclass ToggleFreezeZoomMode {\r\n    constructor(zoomService) {\r\n        this.zoomService = zoomService;\r\n        this.zoomFrozen = false;\r\n    }\r\n    onClick(event) {\r\n        if (this.zoomService.zoomingEnabled && this.zoomFrozen) {\r\n            this.zoomFrozen = false;\r\n            this.zoomService.zoomOff();\r\n        }\r\n        else if (this.zoomService.zoomingEnabled) {\r\n            this.zoomFrozen = true;\r\n            this.zoomService.markForCheck();\r\n        }\r\n        else {\r\n            this.zoomService.zoomOn(event);\r\n        }\r\n    }\r\n    onMouseEnter() {\r\n        // NOP\r\n    }\r\n    onMouseLeave() {\r\n        if (this.zoomService.zoomingEnabled && !this.zoomFrozen) {\r\n            this.zoomService.zoomOff();\r\n        }\r\n    }\r\n    onMouseMove(event) {\r\n        if (this.zoomService.zoomingEnabled && !this.zoomFrozen) {\r\n            this.zoomService.calculateZoomPosition(event);\r\n        }\r\n    }\r\n    onMouseWheel() {\r\n        // Prevent scroll zoom if we're frozen\r\n        return !this.zoomFrozen;\r\n    }\r\n}\n\nclass ToggleZoomMode {\r\n    constructor(zoomService) {\r\n        this.zoomService = zoomService;\r\n    }\r\n    onClick(event) {\r\n        if (this.zoomService.zoomingEnabled) {\r\n            this.zoomService.zoomOff();\r\n        }\r\n        else {\r\n            this.zoomService.zoomOn(event);\r\n        }\r\n    }\r\n    onMouseEnter() {\r\n        // NOP\r\n    }\r\n    onMouseLeave() {\r\n        // NOP\r\n    }\r\n    onMouseMove() {\r\n        // NOP\r\n    }\r\n    onMouseWheel() {\r\n        return true;\r\n    }\r\n}\n\nclass NgxImageZoomComponent {\r\n    constructor(zoomService, renderer) {\r\n        this.zoomService = zoomService;\r\n        this.renderer = renderer;\r\n        this.zoomScroll = new EventEmitter();\r\n        this.zoomPosition = new EventEmitter();\r\n        this.imagesLoaded = new EventEmitter();\r\n        this.lensBorderRadius = 0;\r\n        this.zoomMode = 'hover';\r\n        this.enableScrollZoom = false;\r\n        this.scrollStepSize = 0.1;\r\n        this.circularLens = false;\r\n        this.thumbImageLoaded = false;\r\n        this.subscriptions = [];\r\n        this.eventListeners = [];\r\n        this.zoomModesMap = new Map([\r\n            ['click', ClickZoomMode],\r\n            ['hover-freeze', HoverFreezeZoomMode],\r\n            ['hover', HoverZoomMode],\r\n            ['toggle-click', ToggleClickZoomMode],\r\n            ['toggle-freeze', ToggleFreezeZoomMode],\r\n            ['toggle', ToggleZoomMode],\r\n        ]);\r\n        this.altText = '';\r\n        this.titleText = '';\r\n    }\r\n    set setThumbImage(thumbImage) {\r\n        this.thumbImageLoaded = false;\r\n        this.setIsReady(false);\r\n        this.thumbImage = thumbImage;\r\n    }\r\n    set setFullImage(fullImage) {\r\n        this.zoomService.fullImageLoaded = false;\r\n        this.setIsReady(false);\r\n        this.fullImage = fullImage;\r\n    }\r\n    set setZoomMode(zoomMode) {\r\n        if (NgxImageZoomComponent.validZoomModes.some((m) => m === zoomMode)) {\r\n            this.zoomMode = zoomMode;\r\n        }\r\n    }\r\n    set setMagnification(magnification) {\r\n        this.zoomService.magnification = Number(magnification) || this.zoomService.magnification;\r\n        this.zoomScroll.emit(this.zoomService.magnification);\r\n    }\r\n    set setMinZoomRatio(minZoomRatio) {\r\n        const ratio = Number(minZoomRatio) || this.zoomService.minZoomRatio || this.zoomService.baseRatio || 0;\r\n        this.zoomService.minZoomRatio = Math.max(ratio, this.zoomService.baseRatio || 0);\r\n    }\r\n    set setMaxZoomRatio(maxZoomRatio) {\r\n        this.zoomService.maxZoomRatio = Number(maxZoomRatio) || this.zoomService.maxZoomRatio;\r\n    }\r\n    set setScrollStepSize(stepSize) {\r\n        this.scrollStepSize = Number(stepSize) || this.scrollStepSize;\r\n    }\r\n    set setEnableLens(enable) {\r\n        this.zoomService.enableLens = Boolean(enable);\r\n    }\r\n    set setLensWidth(width) {\r\n        this.zoomService.lensWidth = Number(width) || this.zoomService.lensWidth;\r\n    }\r\n    set setLensHeight(height) {\r\n        this.zoomService.lensHeight = Number(height) || this.zoomService.lensHeight;\r\n    }\r\n    set setCircularLens(enable) {\r\n        this.circularLens = Boolean(enable);\r\n    }\r\n    set setEnableScrollZoom(enable) {\r\n        this.enableScrollZoom = Boolean(enable);\r\n    }\r\n    ngOnInit() {\r\n        // If no full size image is defined, we add the thumbnail as the full size too.\r\n        if (this.fullImage === undefined) {\r\n            this.fullImage = this.thumbImage;\r\n        }\r\n        this.registerServiceSubscriptions();\r\n        // Load zoom mode and set up configuration.\r\n        this.loadZoomMode();\r\n        this.registerEventListeners();\r\n        this.calculateLensBorder();\r\n    }\r\n    ngOnChanges() {\r\n        this.calculateLensBorder();\r\n        this.zoomService.calculateRatioAndOffset();\r\n        this.zoomService.calculateImageAndLensPosition();\r\n    }\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\r\n        this.eventListeners.forEach((destroyFn) => destroyFn());\r\n    }\r\n    registerServiceSubscriptions() {\r\n        this.subscriptions.push(this.zoomService.zoomPosition.subscribe((position) => this.zoomPosition.emit(position)));\r\n    }\r\n    loadZoomMode() {\r\n        const ZoomModeClass = this.zoomModesMap.get(this.zoomMode);\r\n        if (ZoomModeClass) {\r\n            this.zoomInstance = new ZoomModeClass(this.zoomService);\r\n        }\r\n        else {\r\n            console.error(`Unsupported zoom mode: ${this.zoomMode}`);\r\n        }\r\n    }\r\n    registerEventListeners() {\r\n        if (this.zoomInstance) {\r\n            const nativeElement = this.zoomContainer.nativeElement;\r\n            this.eventListeners.push(this.renderer.listen(nativeElement, 'mouseenter', (event) => this.zoomInstance.onMouseEnter(event)), this.renderer.listen(nativeElement, 'mouseleave', (event) => this.zoomInstance.onMouseLeave(event)), this.renderer.listen(nativeElement, 'mousemove', (event) => this.zoomInstance.onMouseMove(event)), this.renderer.listen(nativeElement, 'click', (event) => this.zoomInstance.onClick(event)), \r\n            // Chrome: 'mousewheel', Firefox: 'DOMMouseScroll', IE: 'onmousewheel'\r\n            this.renderer.listen(nativeElement, 'mousewheel', (event) => {\r\n                if (this.zoomInstance.onMouseWheel(event)) {\r\n                    this.onMouseWheel(event);\r\n                }\r\n            }), this.renderer.listen(nativeElement, 'DOMMouseScroll', (event) => {\r\n                if (this.zoomInstance.onMouseWheel(event)) {\r\n                    this.onMouseWheel(event);\r\n                }\r\n            }), this.renderer.listen(nativeElement, 'onmousewheel', (event) => {\r\n                if (this.zoomInstance.onMouseWheel(event)) {\r\n                    this.onMouseWheel(event);\r\n                }\r\n            }));\r\n        }\r\n    }\r\n    /**\r\n     * Template helper methods\r\n     */\r\n    onThumbImageLoaded() {\r\n        // Pass along image sizes to the service.\r\n        this.zoomService.thumbWidth = this.imageThumbnail.nativeElement.width;\r\n        this.zoomService.thumbHeight = this.imageThumbnail.nativeElement.height;\r\n        this.thumbImageLoaded = true;\r\n        this.checkImagesLoaded();\r\n    }\r\n    onFullImageLoaded() {\r\n        // Pass along image sizes to the service.\r\n        this.zoomService.fullWidth = this.fullSizeImage.nativeElement.naturalWidth;\r\n        this.zoomService.fullHeight = this.fullSizeImage.nativeElement.naturalHeight;\r\n        this.zoomService.fullImageLoaded = true;\r\n        this.checkImagesLoaded();\r\n    }\r\n    calculateLensBorder() {\r\n        if (this.zoomService.enableLens) {\r\n            if (this.circularLens) {\r\n                this.lensBorderRadius = this.zoomService.lensWidth / 2;\r\n            }\r\n            else {\r\n                this.lensBorderRadius = 0;\r\n            }\r\n        }\r\n    }\r\n    checkImagesLoaded() {\r\n        this.zoomService.calculateRatioAndOffset();\r\n        if (this.thumbImageLoaded && this.zoomService.fullImageLoaded) {\r\n            this.zoomService.calculateImageAndLensPosition();\r\n            this.setIsReady(true);\r\n        }\r\n    }\r\n    setIsReady(value) {\r\n        this.zoomService.isReady = value;\r\n        this.imagesLoaded.emit(value);\r\n    }\r\n    /**\r\n     * Mouse wheel event\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    onMouseWheel(event) {\r\n        // Don't eat events if scrollZoom or zooming isn't active\r\n        if (!this.enableScrollZoom || !this.zoomService.zoomingEnabled) {\r\n            return;\r\n        }\r\n        event = window.event || event; // old IE\r\n        const direction = Math.max(Math.min(event.wheelDelta || -event.detail, 1), -1);\r\n        if (direction > 0) {\r\n            // up\r\n            this.setMagnification = Math.min(this.zoomService.magnification + this.scrollStepSize, this.zoomService.maxZoomRatio);\r\n        }\r\n        else {\r\n            // down\r\n            this.setMagnification = Math.max(this.zoomService.magnification - this.scrollStepSize, this.zoomService.minZoomRatio);\r\n        }\r\n        this.zoomService.calculateRatio();\r\n        this.zoomService.calculateZoomPosition(event);\r\n        // Prevent scrolling on page.\r\n        event.returnValue = false; // IE\r\n        if (event.preventDefault) {\r\n            event.preventDefault(); // Chrome & FF\r\n        }\r\n    }\r\n}\r\nNgxImageZoomComponent.validZoomModes = [\r\n    'hover',\r\n    'toggle',\r\n    'click',\r\n    'toggle-click',\r\n    'toggle-freeze',\r\n    'hover-freeze',\r\n];\r\nNgxImageZoomComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.3\", ngImport: i0, type: NgxImageZoomComponent, deps: [{ token: NgxImageZoomService }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\r\nNgxImageZoomComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.3\", type: NgxImageZoomComponent, selector: \"lib-ngx-image-zoom\", inputs: { setThumbImage: [\"thumbImage\", \"setThumbImage\"], setFullImage: [\"fullImage\", \"setFullImage\"], setZoomMode: [\"zoomMode\", \"setZoomMode\"], setMagnification: [\"magnification\", \"setMagnification\"], setMinZoomRatio: [\"minZoomRatio\", \"setMinZoomRatio\"], setMaxZoomRatio: [\"maxZoomRatio\", \"setMaxZoomRatio\"], setScrollStepSize: [\"scrollStepSize\", \"setScrollStepSize\"], setEnableLens: [\"enableLens\", \"setEnableLens\"], setLensWidth: [\"lensWidth\", \"setLensWidth\"], setLensHeight: [\"lensHeight\", \"setLensHeight\"], setCircularLens: [\"circularLens\", \"setCircularLens\"], setEnableScrollZoom: [\"enableScrollZoom\", \"setEnableScrollZoom\"], altText: \"altText\", titleText: \"titleText\" }, outputs: { zoomScroll: \"zoomScroll\", zoomPosition: \"zoomPosition\", imagesLoaded: \"imagesLoaded\" }, providers: [NgxImageZoomService], viewQueries: [{ propertyName: \"zoomContainer\", first: true, predicate: [\"zoomContainer\"], descendants: true, static: true }, { propertyName: \"imageThumbnail\", first: true, predicate: [\"imageThumbnail\"], descendants: true, static: true }, { propertyName: \"fullSizeImage\", first: true, predicate: [\"fullSizeImage\"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<div\\n    #zoomContainer\\n    class=\\\"ngxImageZoomContainer\\\"\\n    [style.width.px]=\\\"this.zoomService.thumbWidth\\\"\\n    [style.height.px]=\\\"this.zoomService.thumbHeight\\\"\\n>\\n    <img\\n        #imageThumbnail\\n        class=\\\"ngxImageZoomThumbnail\\\"\\n        [alt]=\\\"altText\\\"\\n        [title]=\\\"titleText\\\"\\n        [src]=\\\"thumbImage\\\"\\n        (load)=\\\"onThumbImageLoaded()\\\"\\n    />\\n\\n    <div\\n        [ngClass]=\\\"{\\n            ngxImageZoomFullContainer: true,\\n            ngxImageZoomLensEnabled: this.zoomService.enableLens\\n        }\\\"\\n        [style.display]=\\\"this.zoomService.zoomDisplay\\\"\\n        [style.top.px]=\\\"this.zoomService.lensTop\\\"\\n        [style.left.px]=\\\"this.zoomService.lensLeft\\\"\\n        [style.width.px]=\\\"this.zoomService.lensWidth\\\"\\n        [style.height.px]=\\\"this.zoomService.lensHeight\\\"\\n        [style.border-radius.px]=\\\"this.lensBorderRadius\\\"\\n    >\\n        <img\\n            #fullSizeImage\\n            class=\\\"ngxImageZoomFull\\\"\\n            [alt]=\\\"altText\\\"\\n            [title]=\\\"titleText\\\"\\n            [src]=\\\"fullImage\\\"\\n            (load)=\\\"onFullImageLoaded()\\\"\\n            [style.display]=\\\"this.zoomService.zoomDisplay\\\"\\n            [style.top.px]=\\\"this.zoomService.fullImageTop\\\"\\n            [style.left.px]=\\\"this.zoomService.fullImageLeft\\\"\\n            [style.width.px]=\\\"this.zoomService.magnifiedWidth\\\"\\n            [style.height.px]=\\\"this.zoomService.magnifiedHeight\\\"\\n        />\\n    </div>\\n</div>\\n\", styles: [\".ngxImageZoomContainer{position:relative;margin:auto;overflow:hidden;pointer-events:none}.ngxImageZoomThumbnail{pointer-events:all}.ngxImageZoomFull{position:absolute;max-width:none;max-height:none;display:none;pointer-events:none}.ngxImageZoomFullContainer{position:absolute;overflow:hidden;pointer-events:none}.ngxImageZoomFullContainer.ngxImageZoomLensEnabled{border:2px solid red;cursor:crosshair;pointer-events:none}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.3\", ngImport: i0, type: NgxImageZoomComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'lib-ngx-image-zoom', providers: [NgxImageZoomService], template: \"<div\\n    #zoomContainer\\n    class=\\\"ngxImageZoomContainer\\\"\\n    [style.width.px]=\\\"this.zoomService.thumbWidth\\\"\\n    [style.height.px]=\\\"this.zoomService.thumbHeight\\\"\\n>\\n    <img\\n        #imageThumbnail\\n        class=\\\"ngxImageZoomThumbnail\\\"\\n        [alt]=\\\"altText\\\"\\n        [title]=\\\"titleText\\\"\\n        [src]=\\\"thumbImage\\\"\\n        (load)=\\\"onThumbImageLoaded()\\\"\\n    />\\n\\n    <div\\n        [ngClass]=\\\"{\\n            ngxImageZoomFullContainer: true,\\n            ngxImageZoomLensEnabled: this.zoomService.enableLens\\n        }\\\"\\n        [style.display]=\\\"this.zoomService.zoomDisplay\\\"\\n        [style.top.px]=\\\"this.zoomService.lensTop\\\"\\n        [style.left.px]=\\\"this.zoomService.lensLeft\\\"\\n        [style.width.px]=\\\"this.zoomService.lensWidth\\\"\\n        [style.height.px]=\\\"this.zoomService.lensHeight\\\"\\n        [style.border-radius.px]=\\\"this.lensBorderRadius\\\"\\n    >\\n        <img\\n            #fullSizeImage\\n            class=\\\"ngxImageZoomFull\\\"\\n            [alt]=\\\"altText\\\"\\n            [title]=\\\"titleText\\\"\\n            [src]=\\\"fullImage\\\"\\n            (load)=\\\"onFullImageLoaded()\\\"\\n            [style.display]=\\\"this.zoomService.zoomDisplay\\\"\\n            [style.top.px]=\\\"this.zoomService.fullImageTop\\\"\\n            [style.left.px]=\\\"this.zoomService.fullImageLeft\\\"\\n            [style.width.px]=\\\"this.zoomService.magnifiedWidth\\\"\\n            [style.height.px]=\\\"this.zoomService.magnifiedHeight\\\"\\n        />\\n    </div>\\n</div>\\n\", styles: [\".ngxImageZoomContainer{position:relative;margin:auto;overflow:hidden;pointer-events:none}.ngxImageZoomThumbnail{pointer-events:all}.ngxImageZoomFull{position:absolute;max-width:none;max-height:none;display:none;pointer-events:none}.ngxImageZoomFullContainer{position:absolute;overflow:hidden;pointer-events:none}.ngxImageZoomFullContainer.ngxImageZoomLensEnabled{border:2px solid red;cursor:crosshair;pointer-events:none}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: NgxImageZoomService }, { type: i0.Renderer2 }]; }, propDecorators: { zoomContainer: [{\r\n                type: ViewChild,\r\n                args: ['zoomContainer', { static: true }]\r\n            }], imageThumbnail: [{\r\n                type: ViewChild,\r\n                args: ['imageThumbnail', { static: true }]\r\n            }], fullSizeImage: [{\r\n                type: ViewChild,\r\n                args: ['fullSizeImage', { static: true }]\r\n            }], zoomScroll: [{\r\n                type: Output\r\n            }], zoomPosition: [{\r\n                type: Output\r\n            }], imagesLoaded: [{\r\n                type: Output\r\n            }], setThumbImage: [{\r\n                type: Input,\r\n                args: ['thumbImage']\r\n            }], setFullImage: [{\r\n                type: Input,\r\n                args: ['fullImage']\r\n            }], setZoomMode: [{\r\n                type: Input,\r\n                args: ['zoomMode']\r\n            }], setMagnification: [{\r\n                type: Input,\r\n                args: ['magnification']\r\n            }], setMinZoomRatio: [{\r\n                type: Input,\r\n                args: ['minZoomRatio']\r\n            }], setMaxZoomRatio: [{\r\n                type: Input,\r\n                args: ['maxZoomRatio']\r\n            }], setScrollStepSize: [{\r\n                type: Input,\r\n                args: ['scrollStepSize']\r\n            }], setEnableLens: [{\r\n                type: Input,\r\n                args: ['enableLens']\r\n            }], setLensWidth: [{\r\n                type: Input,\r\n                args: ['lensWidth']\r\n            }], setLensHeight: [{\r\n                type: Input,\r\n                args: ['lensHeight']\r\n            }], setCircularLens: [{\r\n                type: Input,\r\n                args: ['circularLens']\r\n            }], setEnableScrollZoom: [{\r\n                type: Input,\r\n                args: ['enableScrollZoom']\r\n            }], altText: [{\r\n                type: Input\r\n            }], titleText: [{\r\n                type: Input\r\n            }] } });\n\nclass NgxImageZoomModule {\r\n}\r\nNgxImageZoomModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.3\", ngImport: i0, type: NgxImageZoomModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxImageZoomModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.3\", ngImport: i0, type: NgxImageZoomModule, declarations: [NgxImageZoomComponent], imports: [CommonModule], exports: [NgxImageZoomComponent] });\r\nNgxImageZoomModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.3\", ngImport: i0, type: NgxImageZoomModule, imports: [CommonModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.3\", ngImport: i0, type: NgxImageZoomModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [NgxImageZoomComponent],\r\n                    imports: [CommonModule],\r\n                    exports: [NgxImageZoomComponent],\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of ngx-image-zoom\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxImageZoomComponent, NgxImageZoomModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}